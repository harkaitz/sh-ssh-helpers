#!/bin/sh -e
##:
#h: Usage: ssh-h-check -l | SSH,... CHECKS...
#h:
#h: Define checks writting "check__NAME" scripts and execute in
#h: remote machines.
##:
. ssh-h-list
ssh_h_check() {
    local r="0" m="$1" t c cf log="$(mktemp)"

    ## List checks.
    if test @"$1" = @"-l" || test ! -n "$1" || test ! -n "$2"; then
        ssh_h_check_list
        return 0
    fi
    shift

    ## Create zip with checks.
    t="$(mktemp -d)"
    tl="$(ssh_h_check_list "$@")"
    for c in $tl; do
        cf="$(which "check__$c" || true)"
        if test ! -n "$cf"; then
            echo >&2 "error: $c: Not found."
            return 1
        fi
        cp "${cf}" "${t}"
    done
    tar cf "$t.tar" -C "$t" .
    
    ## Execute checks.
    echo "Log to ${log}"
    for m in $(ssh_h_list "$m"); do
        printf '%-10s : ' "${m}"
        echo "=="      >> "${log}"
        echo "== $m"   >> "${log}"
        echo "=="      >> "${log}"
        if ssh "$m" '
            tmpdir="$(mktemp -d)"
            tar xf - -mok -C "${tmpdir}"
            chmod -R +x "${tmpdir}"
            for t in '"$tl"'; do
                echo "@@@ $t"
                "${tmpdir}/check__$t"
            done
        ' < "$t.tar" >> "$log" 2>&1; then
            echo "OK"
        else
            echo "ERROR"
            r="1"
        fi
    done

    ## Return.
    return "$r"
}
ssh_h_check_list() {
    local d IFS
    if test @"${1:-all}" = @"all"
    then
        case "$(uname -s)" in
            Windows_NT) IFS=';';;
            *)          IFS=':';;
        esac
        for d in ${PATH}; do
            test ! -d "$d" || echo "$d"
        done | xargs -P 10 -I D -- ls D | sed -n 's|check__||p' | tr '\n' ' '
    else
        echo "$@"
    fi
}

## -------------------------------------------------------------------
if test @"$(basename "$0")" = @"ssh-h-check";then
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0";;
        *)            ssh_h_check "$@"; exit 0;;
    esac
fi
