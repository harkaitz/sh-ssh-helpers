#!/bin/sh -e
##:
#h: Usage: ssh-h-authorized-keys [-a] -f FILE SSH,...
#h:
#h: This program replaces "~/.ssh/authorized_keys" in remote machines
#h: specified by "SSH,..." with "FILE". If "-a" is specified the keys
#h: in FILE are appended, keeping those already installed.
#h:
#h: See also: ssh-h-list
##:
. ssh-h-list
ssh_h_authorized_keys() {
    local OPTIND optopt opt_a= cmd= ssh= file=

    ## Parse command line arguments.
    while getopts "af:" optopt; do
        case $optopt in
            f)  file="${OPTARG}";;
            a)  opt_a=y;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    
    ## Require a file.
    if test ! -e "${file}"; then
        echo >&2 "error: Please specify an authorized_keys file."
        return 1
    fi
    
    ## Command to execute.
    cmd='
    mkdir -p ~/.ssh
    cat > ~/.ssh/authorized_keys.tmp <<-KEYS
	'"$(cat ${file})"'
	KEYS
    if test @"$(wc -l < ~/.ssh/authorized_keys.tmp)" = @"0"; then
        echo >&2 "error: Empty authorized_keys."
        exit 1
    fi'
    if test -n "${opt_a}"; then
        cmd="${cmd}"'
        echo "Appending to ~/.ssh/authorized_keys ..."
        cat ~/.ssh/authorized_keys.tmp >> ~/.ssh/authorized_keys
        rm -f ~/.ssh/authorized_keys.tmp'
    else
        cmd="${cmd}"'
        echo "Updating ~/.ssh/authorized_keys ..."
        mv ~/.ssh/authorized_keys.tmp ~/.ssh/authorized_keys'
    fi
    
    ## For each machine.
    for ssh in $(ssh_h_list "$@"); do
        echo "== ${ssh}"
        env ssh -T "${ssh}" sh <<-EOF
	${cmd}
	EOF
    done
    
}
if test @"${SCRNAME:-$(basename "$0")}" = @"ssh-h-authorized-keys"; then
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0"  ;;
        *)            ssh_h_authorized_keys "$@"; exit 0 ;;
    esac
fi
