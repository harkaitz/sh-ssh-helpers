#!/bin/sh -e
##:
#h: Usage: ssh-h-gitconfig [-u FILE.sh] SSH,...
#h:
#h: This program installs the "FILE.sh" in the remote machine's
#h: home directory "~/.gitconfig.sh" (when -u given) and then it
#h: executes it to update "~/.gitconfig".
##:
. ssh-h-list
ssh_h_gitconfig() {
    local OPTIND optopt ssh opt_u=
    
    ## Parse command line arguments.
    while getopts "u:" optopt; do
        case $optopt in
            u)  opt_u="${OPTARG}";;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))

    ## Operations.
    for ssh in $(ssh_h_list "$@"); do
        echo "== ${ssh}"
        if test -n "${opt_u}"; then
            ssh_h_gitconfig_update "${ssh}" "${opt_u}"
        fi
        ssh_h_gitconfig_check "${ssh}"
    done
}
## -------------------------------------------------------------------
ssh_h_gitconfig_update() {
    local ssh="$1" icfg="$2"
    dos2unix < "${icfg}" | ssh -T "${ssh}" '
        echo "Updating ~/.gitconfig ..."
        cat > ~/.gitconfig.sh
        sh -e ~/.gitconfig.sh > ~/.gitconfig
        echo "[test]"        >> ~/.gitconfig
        echo "	key = value" >> ~/.gitconfig
        git lfs install
    '
}
ssh_h_gitconfig_check() {
    ssh -T "${ssh}" '
        if test @"$(git config --get test.key)" = @"value"; then
            echo "Git configured."
        else
            echo "Git not configured."
        fi
    ' < /dev/null
}
## -------------------------------------------------------------------
if test @"${SCRNAME:-$(basename "$0")}" = @"ssh-h-gitconfig"; then
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0" ;;
        *)            ssh_h_gitconfig "$@"; exit 0      ;;
    esac
fi
